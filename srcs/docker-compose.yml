version: "3.8"
services:

  mariadb:
    container_name: mariadb
    build: ./requirements/mariadb/.       # Where the Dockerfile is located
    image: mariadb                      # Image name
    volumes:
      - mariadb_data:/var/lib/mysql     # Persistent ddatabase location host:container
    networks:
      -  inception                      # Network to communicate with other containers
    restart: on-failure                 # Restarts automatically
    env_file:
      - .env                            # Where the env variables are stored

  wordpress:
    container_name: wordpress
    depends_on:
      - mariadb
    build: ./requirements/wordpress/.
    image: wordpress
    volumes:
      - wordpress_data:/var/www/html
    networks:
      -  inception
    env_file:
      - .env
    restart: on-failure

  nginx:
    container_name: nginx
    depends_on:                         # Define dependencies for container startup
      - wordpress                       # NGINX will wait for WordPress to start
    build: ./requirements/nginx/.
    image: nginx
    ports:
      - "443:443"                       # Bind container's port 443 (HTTPS) to host's port 443
    volumes:
      - wordpress_data:/var/www/html    # (ensures Nginx has access to the files generated by the WP container)
    networks:
      -  inception
    restart: on-failure                # Restarts whenever it crashes
    env_file:
      - .env


volumes:
  mariadb_data:
    driver_opts:
      type: none                             # Indicates this is a bind mount
      o: bind                                # Specifies that the volume binds to a local directory
      device: /home/ubuntu/data/mariadb_data # Local directory where MariaDB's data will persist
  wordpress_data:
    driver_opts:
      type: none
      o: bind
      device: /home/ubuntu/data/wordpress_data


networks:
    inception:
      driver: bridge                        # Use the default bridge network driver to connect containers
